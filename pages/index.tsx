import Head from "next/head";
import { Inter } from "next/font/google";
import React, { useState, useEffect } from "react";
import { SubmitButton } from "../components/Buttons/SubmitButton";
import { ValidationErrors } from "../components/Alerts/ValidationErrors";
import { Alert } from "../components/Alerts/Alert";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [isLoader, setIsLoader] = useState(false);
  const [data, setData] = useState(null);
  const [validationErrors, setValidationErrors] = useState(null);
  const [errors, setErrors] = useState<any | null>(null);

  const apiUrl: any = process.env.NEXT_PUBLIC_API_HOST;

  const handleSubmit = async (event: any) => {
    event.preventDefault();

    setIsLoader(true);

    const data = {
      email: event.target.email.value,
      password: event.target.password.value,
    };

    const JSONdata = JSON.stringify(data);

    const options = {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSONdata,
    };

    const response = await fetch(`${apiUrl}/login`, options);

    // reset to default value
    setValidationErrors(null);
    setErrors(null);

    if (response.status === 200) {
      const result = await response.json();
      console.log(result);
    } else {
      const result = await response.json();

      if (result.message === "Validation error") {
        setValidationErrors(result.errors);
      } else {
        setErrors(result.errors);
      }
    }
    setIsLoader(false);
  };

  return (
    <>
      <Head>
        <title>Website Monitor</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className="h-screen md:flex">
          <div className="relative overflow-hidden md:flex w-1/2 bg-gray-100 justify-around items-center hidden">
            <div>
              <h1 className="text-gray-500 font-bold text-4xl font-sans">
                Website Monitor
              </h1>
              <p className="text-gray-400 mt-1">
                Monitor your website everytime and get notification in your mail
              </p>
              <button
                type="submit"
                className="block w-28 bg-gray-400 text-white hover:bg-gray-300 mt-4 py-2 rounded-2xl font-bold mb-2"
              >
                Github
              </button>
            </div>
          </div>
          <div className="flex md:w-1/2 justify-center py-10 items-center bg-white">
            <form className="bg-white" onSubmit={handleSubmit}>
              <h1 className="text-gray-500 font-bold text-2xl  text-center mb-3">
                Login
              </h1>

              <p className="text-center text-sm font-normal text-gray-400 mb-7">
                Please use your registered account
              </p>

              <ValidationErrors errors={validationErrors} />
              <Alert error={errors} type="danger" />

              <div className="flex items-center border-2 py-0 px-3 rounded-2xl mb-4 mt-4">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="h-5 w-5 text-gray-400"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"
                  />
                </svg>
                <input
                  className="pl-2 outline-none border-none focus:border-transparent focus:ring-0"
                  type="text"
                  name="email"
                  placeholder="Email"
                />
              </div>
              <div className="flex items-center border-2 py-0 px-3 rounded-2xl mb-4">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="h-5 w-5 text-gray-400"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                    clipRule="evenodd"
                  />
                </svg>
                <input
                  className="pl-2 outline-none border-none focus:border-transparent focus:ring-0"
                  type="password"
                  name="password"
                  placeholder="Password"
                />
              </div>

              <SubmitButton isLoader={isLoader} />
            </form>
          </div>
        </div>
      </div>
    </>
  );
}
